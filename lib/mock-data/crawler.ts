import type { CrawlJob, CrawlResult, CrawlStats } from "../types/crawler"

export const mockCrawlJobs: CrawlJob[] = [
  {
    id: "1",
    name: "회사 위키 페이지",
    startUrl: "https://wiki.company.com",
    urlPatterns: ["https://wiki.company.com/**"],
    status: "completed",
    followLinks: true,
    respectRobots: true,
    maxDepth: 3,
    maxPages: 100,
    delayMs: 1000,
    lastRun: "2025-01-09T10:30:00Z",
    nextRun: "2025-01-10T10:30:00Z",
    pagesCollected: 45,
    totalPages: 50,
    progress: 90,
    errorCount: 2,
    settings: {
      userAgent: "CompanyBot/1.0",
      timeout: 30000,
      retryCount: 3,
      excludePatterns: ["/admin/**", "/private/**"],
      includePatterns: ["/docs/**", "/guides/**"],
      extractors: [
        { name: "title", selector: "h1", required: true },
        { name: "content", selector: ".content", required: true },
        { name: "tags", selector: ".tags a", required: false },
      ],
    },
    createdAt: "2025-01-09T09:00:00Z",
    updatedAt: "2025-01-09T11:30:00Z",
  },
  {
    id: "2",
    name: "개발 문서 사이트",
    startUrl: "https://docs.company.com",
    urlPatterns: ["https://docs.company.com/api/**", "https://docs.company.com/guides/**"],
    status: "running",
    followLinks: true,
    respectRobots: true,
    maxDepth: 2,
    maxPages: 200,
    delayMs: 500,
    lastRun: "2025-01-09T14:00:00Z",
    pagesCollected: 23,
    totalPages: 50,
    progress: 46,
    errorCount: 0,
    settings: {
      userAgent: "CompanyBot/1.0",
      timeout: 20000,
      retryCount: 2,
      excludePatterns: ["/internal/**"],
      includePatterns: ["/api/**", "/guides/**"],
      extractors: [
        { name: "title", selector: "h1", required: true },
        { name: "content", selector: ".markdown-body", required: true },
        { name: "category", selector: ".breadcrumb", required: false },
      ],
    },
    createdAt: "2025-01-09T13:30:00Z",
    updatedAt: "2025-01-09T15:45:00Z",
  },
  {
    id: "3",
    name: "FAQ 페이지",
    startUrl: "https://support.company.com/faq",
    urlPatterns: ["https://support.company.com/faq/**"],
    status: "error",
    followLinks: false,
    respectRobots: true,
    maxDepth: 1,
    maxPages: 50,
    delayMs: 2000,
    lastRun: "2025-01-08T16:00:00Z",
    pagesCollected: 0,
    totalPages: 0,
    progress: 0,
    errorCount: 5,
    settings: {
      userAgent: "CompanyBot/1.0",
      timeout: 15000,
      retryCount: 1,
      excludePatterns: [],
      includePatterns: ["/faq/**"],
      extractors: [
        { name: "question", selector: ".faq-question", required: true },
        { name: "answer", selector: ".faq-answer", required: true },
      ],
    },
    createdAt: "2025-01-08T15:00:00Z",
    updatedAt: "2025-01-08T16:30:00Z",
  },
]

export const mockCrawlResults: CrawlResult[] = [
  {
    id: "1",
    jobId: "1",
    url: "https://wiki.company.com/getting-started",
    title: "시작하기 가이드",
    content: "회사 시스템 사용법에 대한 기본 가이드입니다...",
    metadata: {
      category: "가이드",
      tags: ["시작하기", "기본"],
      lastModified: "2025-01-05T10:00:00Z",
    },
    status: "success",
    responseTime: 1200,
    statusCode: 200,
    createdAt: "2025-01-09T10:35:00Z",
    updatedAt: "2025-01-09T10:35:00Z",
  },
  {
    id: "2",
    jobId: "2",
    url: "https://docs.company.com/api/authentication",
    title: "API 인증",
    content: "API 인증 방법에 대한 상세 설명...",
    metadata: {
      category: "API",
      tags: ["인증", "보안"],
      version: "v2.1",
    },
    status: "success",
    responseTime: 800,
    statusCode: 200,
    createdAt: "2025-01-09T14:15:00Z",
    updatedAt: "2025-01-09T14:15:00Z",
  },
]

export const mockCrawlStats: CrawlStats = {
  totalJobs: 8,
  runningJobs: 1,
  completedJobs: 5,
  errorJobs: 2,
  totalPages: 342,
  totalDataSize: 25600000, // ~25MB
}
